<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>krismorte</title>
    <link>https://krismorte.github.io/pt/</link>
    <description>Recent content on krismorte</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 05 Dec 2020 18:55:33 +0000</lastBuildDate><atom:link href="https://krismorte.github.io/pt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gerenciando seu github com Terraform</title>
      <link>https://krismorte.github.io/pt/posts/managing-github-terraform/</link>
      <pubDate>Sat, 05 Dec 2020 18:55:33 +0000</pubDate>
      
      <guid>https://krismorte.github.io/pt/posts/managing-github-terraform/</guid>
      <description>Não é novidade que o GIT hoje é essencial a qualquer empresa que trabalhe de alguma forma com softwares, e, consequêntemente alguma solução cloud como github, gitlab e bitbucket que atualmente são os principais. Hoje irei contar um pouco da dor de gerênciar repositórios e permissões e porque acabei por adotar o terraform como solução de gerência do github.
Conforme a empresa cresce a quantidade de repositórios no sue github tendem a crescer exponencialmente e assim a falta de padrão se torna um doência altamente contagiosa além, óbvio, do risco de vazamento de informações.</description>
    </item>
    
    <item>
      <title>AWS RDS Backup Strategy</title>
      <link>https://krismorte.github.io/pt/posts/aws-rds-backup-strategy/</link>
      <pubDate>Mon, 13 Apr 2020 18:55:33 +0000</pubDate>
      
      <guid>https://krismorte.github.io/pt/posts/aws-rds-backup-strategy/</guid>
      <description>Esse post vai tratar de uma estratégia de backup e disaster recovery voltado ao AWS RDS feito através de lambdas. Primeiramente vamos falar sobre as snapshots que vem habilitadas por default no RDS é uma solução ao me ver bem robusta com a opção de point-in-time que realiza backups de logs a cada 5 minutos o que permite uma cobertura enorme em casos de falhas. Existem 2 tipos de snapshot automática e manual, as automáticas são feitas diariamente e incrementais durante o decorrer do dia para fornecer o point-in-time elas são mantidas por no máximo 35 dias, e isso não é configurável, já as manuais são feitas por console, cli ou aplicações e não tem data de validade e são limitadas a 100 por instância e região mais esse número pode ser incrementados via chamado com a AWS.</description>
    </item>
    
    <item>
      <title>Documentando bancos com Schemaspy</title>
      <link>https://krismorte.github.io/pt/posts/documenting-databases-with-schemaspy/</link>
      <pubDate>Sun, 12 Apr 2020 18:55:33 +0000</pubDate>
      
      <guid>https://krismorte.github.io/pt/posts/documenting-databases-with-schemaspy/</guid>
      <description>Quando penso em documentação de banco de dados lembro-me de ferramentas centralizadoras onde tudo relacionado ao banco de dado parte do DBA, design, alterar tipo de coluna era necessário abrir um ticket pro DBA e coisas nesse sentido. Num mundo sem migrations e CI\CD fazia muito sentido centralizar tudo na mão do cara especializado, bancos imensos com milhares de tabelas alguns teras de dados e atendendo as vezes mais de um sistema , nos fazia necessário de um ditador benevolente.</description>
    </item>
    
    <item>
      <title>Olá Mundo</title>
      <link>https://krismorte.github.io/pt/posts/hello-world/</link>
      <pubDate>Fri, 27 Dec 2019 20:32:37 -0300</pubDate>
      
      <guid>https://krismorte.github.io/pt/posts/hello-world/</guid>
      <description>Primeira postagem vem mais como o &amp;ldquo;porque&amp;rdquo; desde blog e a ideia é bem simples compartilhar conhecimento e experiência nesse mundo de tecnologia que muda rápido demais. Várias pessoas que sigo e acompanho de perto sempre repetem compartilhem conhecimento, escrevam a respeito dos cenários em que vivem e quais tecnologias estão usando e agora eu começo por aqui.
Esse não é meu primeiro blog, eu realmente gosto de escrever, meu primeiro blog ainda esta no ar e era a respeito de shows e bandas de rock na minha cidade natal, por falta de tempo acabei deixando-o de lado mas o mesmo ainda esta no ár caso vocês queiram dar uma olhada rock-ce.</description>
    </item>
    
    <item>
      <title>Krisnamourt da Silva C. Filho</title>
      <link>https://krismorte.github.io/pt/about/</link>
      <pubDate>Sun, 03 Sep 1989 00:00:00 +0000</pubDate>
      
      <guid>https://krismorte.github.io/pt/about/</guid>
      <description>Olá, sou Krisnamourt, mas pode chamar de Kris sim. Fortalezence, casado, pet family, músico por vocação e apaixonado por inovação. Nascido em Fortaleza-CE, já passei por Ribeirão Preto-SP e atualmente morando em Limeira-SP. Desde de 2008 venho trabalhando como DBA, mas sou formado em analise e desenvolvimento de sistemas pela FIC. Sempre estive entre dois mundos infraestrutura e desenvolvimento, hoje com o nascimento e amadurecimento do DEVOPS acredito que me encontrei nessa indústria.</description>
    </item>
    
    <item>
      <title>Experiência</title>
      <link>https://krismorte.github.io/pt/career/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://krismorte.github.io/pt/career/</guid>
      <description>Beblue — DBA Sr MAR DE 2019 ~ , Ribeirão Preto-SP
Startup que oferece cashback nas transações feitas pela plataforma. Minhas principais atividades são manter o ambiente de SQL que se encontra totalmente na AWS o principal banco de dados se encontra em always-on na plataforma ECS, os bancos postgresql e mysql estão no RDS e também utilizamos a plataforma do redshift. Dentre as atividades de execução de script, melhorias de consultas e permissões estou implementando monitorias através da plataforma datadog e alguns dasboards, inclusive os alertas datadog foram criados via terraform.</description>
    </item>
    
  </channel>
</rss>
